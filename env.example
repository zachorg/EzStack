PORT=8080
EZAUTH_API_KEY=ea_test_example
EZAUTH_MASTER_KEY=ea_master_example
AUTH_DISABLE=false
AUTH_LEGACY=false

# Redis (required)
REDIS_URL=redis://redis:6379

# Email (required for OTE)
EMAIL_FROM=no-reply@example.com
EMAIL_DRY_RUN=true
# Optional: point to LocalStack or custom endpoint
AWS_SES_ENDPOINT=

# OTP/OTE defaults (optional; tenant settings can override per tenant)
OTP_TTL_SECONDS=300
OTP_LENGTH=6
OTP_MAX_ATTEMPTS=5
OTE_TTL_SECONDS=300
OTE_LENGTH=6
OTE_MAX_ATTEMPTS=5

# Rate limits (optional; tenant settings can override per tenant)
RESEND_COOLDOWN_SEC=30
DEST_PER_MINUTE=5
RATE_ROUTE_MAX=30

# SQS (optional for now; leave blank to skip)
AWS_REGION=us-east-1
AWS_ACCESS_KEY_ID=__fill_if_using_real_aws__
AWS_SECRET_ACCESS_KEY=__fill_if_using_real_aws__
SQS_QUEUE_NAME=ez-send-queue
AWS_SQS_ENDPOINT= # e.g. http://localhost:4566 for LocalStack
SQS_ENABLE=false

# Firebase Admin (choose one)
# Option A: ADC via GOOGLE_APPLICATION_CREDENTIALS pointing to a service account JSON file
# Docker Compose mount (see docker-compose.yaml):
# GOOGLE_APPLICATION_CREDENTIALS=/secrets/service-account.json
# Option B: Inline credentials (escape newlines as \n when using .env)
# FIREBASE_PROJECT_ID=
# FIREBASE_CLIENT_EMAIL=
# FIREBASE_PRIVATE_KEY=
# e.g. "-----BEGIN PRIVATE KEY-----\n...\n-----END PRIVATE KEY-----\n"

# API key hashing pepper (required when using Firebase auth)
APIKEY_PEPPER=change_me

# Auth caching
APIKEY_CACHE_TTL_MS=30000
APIKEY_REDIS_TTL_SEC=60
# If true, allows previously cached entries when Firebase is unreachable
AUTH_FAIL_SAFE=false